name: CI/CD

on:
  push:
    branches: [ dev ]  # Only allow pushes to dev branch
  pull_request:
    branches: [ main ]  # PRs to main for review and testing

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Cache Cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-v2
        restore-keys: |
          ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-v2
          ${{ runner.os }}-cargo-

    - name: Check formatting
      run: cargo fmt -- --check

    - name: Run clippy
      run: cargo clippy -- -D warnings

    - name: Run tests
      run: cargo test --verbose

    - name: Check build
      run: cargo check --verbose

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Cache Cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-v2
        restore-keys: |
          ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-v2
          ${{ runner.os }}-cargo-

    - name: Cache Cargo tools
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
        key: ${{ runner.os }}-cargo-tools-audit-v1
        restore-keys: |
          ${{ runner.os }}-cargo-tools-

    - name: Install cargo-audit
      run: |
        if ! command -v cargo-audit &> /dev/null; then
          cargo install cargo-audit
        else
          echo "cargo-audit already installed"
        fi

    - name: Run security audit
      run: cargo audit

  docker-build-dev:
    name: Docker Build Dev
    runs-on: ubuntu-latest
    needs: [test, security-audit]
    if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Dev Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./docker/Dockerfile
        platforms: linux/amd64
        push: true
        tags: |
          ghcr.io/${{ github.repository }}:dev
          ghcr.io/${{ github.repository }}:dev-${{ github.sha }}
        labels: |
          org.opencontainers.image.title=Vouchrs
          org.opencontainers.image.description=A lightweight, high-performance OIDC reverse proxy built in Rust
          org.opencontainers.image.url=https://github.com/vouchrs/vouchrs
          org.opencontainers.image.source=https://github.com/vouchrs/vouchrs
          org.opencontainers.image.version=dev-${{ github.sha }}
          org.opencontainers.image.created=${{ github.event.repository.pushed_at }}
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.licenses=MIT
        cache-from: |
          type=gha,scope=vouchrs-docker
          type=gha,scope=vouchrs-docker-dev
          type=registry,ref=ghcr.io/${{ github.repository }}:cache-dev
          type=registry,ref=ghcr.io/${{ github.repository }}:dev
        cache-to: |
          type=gha,mode=max,scope=vouchrs-docker-dev
          type=registry,ref=ghcr.io/${{ github.repository }}:cache-dev,mode=max
          type=inline

  docker-build-test:
    name: Docker Build Test
    runs-on: ubuntu-latest
    needs: [test, security-audit]
    if: github.event_name == 'pull_request'  # Only test builds for PRs

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image (test only)
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./docker/Dockerfile
        platforms: linux/amd64
        push: false
        cache-from: |
          type=gha,scope=vouchrs-docker
          type=gha,scope=vouchrs-docker-dev
          type=gha,scope=vouchrs-docker-release
        cache-to: |
          type=gha,mode=max,scope=vouchrs-docker
          type=inline
