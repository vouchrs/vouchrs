version: '3.8'

services:
  sonarqube:
    image: sonarqube:community
    container_name: vouchrs-sonarqube
    ports:
      - "9000:9000"
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
      - SONAR_JDBC_URL=jdbc:postgresql://sonarqube-db:5432/sonarqube
      - SONAR_JDBC_USERNAME=sonarqube
      - SONAR_JDBC_PASSWORD=sonarqube
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions
    depends_on:
      - sonarqube-db
    networks:
      - sonarqube-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000/api/system/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  sonarqube-scanner:
    image: sonarsource/sonar-scanner-cli:latest
    container_name: vouchrs-scanner
    profiles:
      - scan
    environment:
      - SONAR_HOST_URL=http://sonarqube:9000
      - SONAR_TOKEN=${SONAR_TOKEN}
    volumes:
      - ../:/usr/src:ro
    working_dir: /usr/src
    networks:
      - sonarqube-network
    depends_on:
      sonarqube:
        condition: service_healthy

  sonarqube-db:
    image: postgres:15-alpine
    container_name: vouchrs-sonarqube-db
    environment:
      - POSTGRES_USER=sonarqube
      - POSTGRES_PASSWORD=sonarqube
      - POSTGRES_DB=sonarqube
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    networks:
      - sonarqube-network

volumes:
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions:
  postgresql_data:

networks:
  sonarqube-network:
    driver: bridge
